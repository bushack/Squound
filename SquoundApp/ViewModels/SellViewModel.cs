using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Input;

using SquoundApp.Interfaces;
using SquoundApp.Models;
using SquoundApp.Pages;
using SquoundApp.Services;


namespace SquoundApp.ViewModels
{
    public partial class SellViewModel : BaseViewModel
    {
        private readonly INavigationService _Navigation;
        private readonly SellService _Service;

        [ObservableProperty]
        private SellModel model = new();


        public SellViewModel(SellService service, INavigationService navigation)
        {
            _Navigation = navigation ?? throw new ArgumentNullException(nameof(navigation));
            _Service = service ?? throw new ArgumentNullException(nameof(service));
        }

        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
        public async Task InitializeAsync()
        {
            if (Model is null)
            {
                // Fetch data only if the model is not already populated.
                await FetchDataAsync();
            }
            else
            {
                // If the model is already populated, we can skip fetching data.
                Console.WriteLine("Model is already populated, skipping fetch.");
            }
        }

        /*
         * Instructs the shell to go to the AboutUs page.
         * We bind this command to the button in the FooterView.xaml file.
         * The code that performs the binding is auto generated by the .NET MAUI framework.
         * The name of the auto-generated command replaces 'Async' with 'Command'.
         */
        [RelayCommand]
        async Task GoToPageAsync()
        {
            // The model contains the data fetched from the service (AboutService).
            // If the model is null, it means that the data has not been fetched yet.
            // This is necessary because the model will contain all the data that will
            // be displayed on the AboutUs page.
            if (Model is null)
                await FetchDataAsync();

            // This is the call that initiates the change of page.
            //await Shell.Current.GoToAsync(nameof(SellPage));

            await _Navigation.GoToAsync(nameof(SellPage));
        }

        /*
         * This method causes the service to fetch the data required to build the model.
         * It is called when the user navigates to the AboutUs page.
         */
        [RelayCommand]
        public async Task FetchDataAsync()
        {
            if (IsBusy)
                return;

            try
            {
                IsBusy = true;

                var response = await _Service.GetDataAsync();

                Model = response.Data ?? new SellModel();
            }

            catch (Exception ex)
            {
                // Handle exceptions, e.g., log them or show an alert to the user.
                Console.WriteLine($"Error fetching data: {ex.Message}");

                await Shell.Current.DisplayAlert(
                    "Error",
                    "An error occurred while attempting to fetch data",
                    "OK");
            }

            finally
            {
                IsBusy = false;
            }
        }


        [RelayCommand]
        private async Task OnBackButton()
        {
            await _Navigation.GoBackOrHomeAsync();
        }
    }
}
