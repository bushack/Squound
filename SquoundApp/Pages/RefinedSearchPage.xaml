<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:dtos="clr-namespace:Shared.DataTransfer;assembly=Shared"
             xmlns:views="clr-namespace:SquoundApp.Views"
             xmlns:viewmodels="clr-namespace:SquoundApp.ViewModels"
             x:Class="SquoundApp.Pages.RefinedSearchPage"
             x:DataType="viewmodels:RefinedSearchViewModel">

    <Grid RowDefinitions="Auto, Auto, *">

        <!-- Row 0 : Displays the page title, category search bar and the sort and filter buttons -->
        <Label Grid.Row="0"
               Text="{Binding Title}"
               Style="{StaticResource SmallText}"
               BackgroundColor="Transparent"
               VerticalOptions="Center" 
               HorizontalOptions="Center"
               Margin="15"/>

        <views:SortAndFilterView Grid.Row="1"/>

        <!-- Row 1 : Displays the vertically scrollable collection of items -->
        <CollectionView Grid.Row="2"
                        BackgroundColor="Transparent"
                        ItemsSource="{Binding ItemList}"
                        ItemsLayout="VerticalGrid, 2"
                        SelectionMode="None"
                        IsVisible="{Binding IsNotBusy}"
                        IsEnabled="{Binding IsNotBusy}">

            <!-- Page header -->
            <CollectionView.Header>

                <!-- Displays the number of items returned by the search -->
                <Label Text="{Binding ItemsFound}"
                       TextColor="Black" Margin="0, 8, 0, 2"
                       Style="{StaticResource SmallText}"
                       HorizontalOptions="Center" VerticalOptions="Center"/>

            </CollectionView.Header>

            <!-- Defines the layout of a single item in the scrollable collection -->
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="dtos:ItemSummaryDto">
                    <Grid>
                        <Border BackgroundColor="Transparent"
                                Margin="10"
                                StrokeShape="RoundRectangle 15"
                                StrokeThickness="0"
                                SizeChanged="ImageBorder_SizeChanged">

                            <!-- The border defines a tappable area that allows the user to access a specific item -->
                            <Border.GestureRecognizers>
                                <!-- TapGestureRecognizer is used to handle tap events on each item in the CollectionView -->
                                <!-- The CommandParameter is set to the current item (.), allowing the command to access it -->
                                <!-- The Command is bound to a command in the RefinedSearchViewModel that retrieves the item details -->
                                <!-- In this case, the program will walk up the stack of the binding chain, starting with the -->
                                <!-- Item, until it finds a RefinedSearchViewModel, inside which is the command (GetItem) -->
                                <!-- that it should execute -->
                                <TapGestureRecognizer CommandParameter="{Binding .}"
                                                      Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:RefinedSearchViewModel}}, x:DataType=viewmodels:RefinedSearchViewModel, Path=GoToItemPageCommand}"/>
                            </Border.GestureRecognizers>

                            <!-- Main image with rounded corners -->
                            <VerticalStackLayout>
                                <Border StrokeShape="RoundRectangle 15"
                                        StrokeThickness="0"
                                        HorizontalOptions="Fill"
                                        VerticalOptions="Center">
                                    <Image Source="{Binding PrimaryImageUrl}"
                                           Aspect="AspectFit"/>
                                </Border>

                                <!-- Name and price of item -->
                                <Grid RowDefinitions="Auto, Auto"
                                      Padding="0, 10, 0, 25"
                                      ColumnSpacing="2">
                                    <Label BackgroundColor="Transparent" Grid.Row="0" Text="{Binding Name}" Style="{StaticResource SmallBoldText}" HorizontalOptions="Center"  Margin="0, 0, 0, 5"/>
                                    <Label BackgroundColor="Transparent" Grid.Row="1" Text="{Binding Price, StringFormat='{}{0:C2}'}" Style="{StaticResource SmallBoldText}" HorizontalOptions="Center"/>
                                </Grid>
                            </VerticalStackLayout>
                        </Border>
                    </Grid>
                </DataTemplate>
            </CollectionView.ItemTemplate>

            <!-- Page footer -->
            <CollectionView.Footer>
                <VerticalStackLayout>

                    <!-- Pagination section -->
                    <Grid ColumnDefinitions="*, *, *"
                          ColumnSpacing="20"
                          Padding="20, 10"
                          IsEnabled="{Binding HasAnyItems}"
                          IsVisible="{Binding HasAnyItems}">

                        <!-- Previous page button -->
                        <Button Grid.Column="0"
                                Text="Previous"
                                Style="{StaticResource ThemeSensitiveTextButton}"
                                Command="{Binding PrevPageCommand}"
                                IsEnabled="{Binding HasPrevPage}"
                                IsVisible="{Binding HasPrevPage}"/>

                        <!-- Label displaying current page number, eg. "Page 1 of 10" -->
                        <Label Grid.Column="0"
                               Grid.ColumnSpan="3"
                               Text="{Binding PageNumber}"
                               Style="{StaticResource SmallText}"
                               HorizontalOptions="Center"
                               VerticalOptions="Center"/>

                        <!-- Next page button -->
                        <Button Grid.Column="2"
                                Text="Next"
                                Style="{StaticResource ThemeSensitiveTextButton}"
                                Command="{Binding NextPageCommand}"
                                IsEnabled="{Binding HasNextPage}"
                                IsVisible="{Binding HasNextPage}"/>
                    </Grid>

                    <!-- Squound footer -->
                    <views:FooterView/>

                </VerticalStackLayout>
            </CollectionView.Footer>
        </CollectionView>

        <!-- Bind the page's DataType (RefinedSearchViewModel) to the LoadingOverlayView -->
        <!-- This prompts the LoadingOverlayView to display itself when the ViewModel's IsBusy property is true -->
        <views:LoadingOverlayView Grid.Row="0" Grid.RowSpan="2" x:DataType="{Binding .}"/>

    </Grid>
</ContentPage>